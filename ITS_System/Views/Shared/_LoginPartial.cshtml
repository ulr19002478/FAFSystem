@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">

@if (SignInManager.IsSignedIn(User))
{

    @if(await UserManager.IsInRoleAsync(await UserManager.GetUserAsync(User), "Admin")) //HERE
    {
       <li class="nav-item">
            <a class="nav-link text-light btn-primary btn" asp-area="Admin" asp-controller="Home" asp-action="Index">Admin Portal</a>
       </li>
    }


    @if (await UserManager.IsInRoleAsync(await UserManager.GetUserAsync(User), "Customer")) //HERE
    {
        <li class="nav-item">
            <a class="nav-link text-light btn-primary btn" asp-area="Customer" asp-controller="Home" asp-action="Index">Customer Portal</a>
        </li>
    }

    <li class="nav-item">
        <a  class="nav-link text-light" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity?.Name!</a>
    </li>
    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link text-light">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-light" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-light" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
